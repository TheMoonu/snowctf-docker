version: "3.0"
services:

  db:
    restart: always
    image: ${MYSQL_IMAGE}
    container_name: snow_db
    volumes:
      - ./db/mysql:/var/lib/mysql
      - ./db/my.cnf:/etc/my.cnf:ro
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${SNOW_MYSQL_NAME}
      
    networks:
      - backend

  redis:
    restart: always
    image: ${REDIS_IMAGE}
    container_name: snow_redis
    volumes:
      - ./redis/data:/data
    networks:
      - backend

  web:
    restart: always
    image: ${SNOW_IMAGE}
    container_name: snow_web
    environment:
      SNOW_MYSQL_PASSWORD: R4MmGnntRa4TY64s
      SNOW_MYSQL_HOST: db
      SNOW_MYSQL_NAME: ${SNOW_MYSQL_NAME}
      SNOW_MYSQL_USER: root
      SNOW_MYSQL_PORT: 3306
      SNOW_REDIS_HOST: redis
      SNOW_REDIS_PORT: 6379
    env_file:
      - ./snow.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./web/static:/opt/cloud/snowctf/static
      - ./web/media:/opt/cloud/snowctf/media
      - ./web/whoosh_index:/opt/cloud/snowctf/whoosh_index
      - ./web/log:/opt/cloud/snowctf/log
    links:
      - db
      - redis
    depends_on:
      - db
      - redis
    networks:
      - backend
      - frontend

  nginx:
    restart: always
    image: ${NGINX_IMAGE}
    container_name: snow_nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./web/static:/usr/share/nginx/snowctf/static
      - ./web/media:/usr/share/nginx/snowctf/media
    ports:
      - "${NGINX_PORT}:80"
    links:
      - web
    networks:
      - frontend

networks:
  backend:
    name: snow_backend  # 指定固定网络名
    driver: bridge
  frontend:
    name: snow_frontend
    driver: bridge
